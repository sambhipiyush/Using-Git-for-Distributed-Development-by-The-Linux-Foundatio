To get some grasp of what distributed development looks like, and how git handles the repositories for that, let's look at git.kernel.org, which contains a large number of git repositories for projects that are somehow related to the Linux kernel. And so we can see the name and description, the owner, and various statistics for a large number of repositories here. We could look at any one of them, but why don't we look at the main Linux kernel repository, which would be easy to find because it's owned by Linus Torvalds. And here's... right here, the kernel source tree, so let's look at that. And you'll see, first, it lists the branches here. He just has a master and a work-in-progress (WIP) branch. Tags are various known states that are easily reverted to instead of typing long hexidecimal numbers that are used for commits. These are commit messages, and these are various places you can clone or copy the repository from, using the git protocol in the first one, or the HTTP protocol in the further ones. If I go back to the top, if I look at stats here, see, these are the people who have been contributing recently, and the number of commits. This is by week. If I want to get longer statistics, let me switch to quarter. And you'll see there are many more people listed here. You'll notice, by the way, Linus' name doesn't even come up in the top group in here, that's because he mostly is taking commits from other people and then feeding them into the master branch. So, he doesn't make that many commits on his own. And, if we go back to the summary here, notice, if I want to look at the actual changes, I could look, say, at commit. And, this will be a recent one that Linus committed, okay, which contains a number of changes. These are all the different files that were changed. If I look at the dif here, I can see also particular patches that were done. And you see the plus signs are lines which have been added, the minus signs are lines which have been removed, so there's a one line change right here. And then, there's some lines before and after, which are given for context. And then, here's the various logs, so, for instance, if I want to look at any particular one here, let's just pick one here from Jeff Laten. You see, there's the author, and then, the committer is the one who actually put it into the kernel, so this first person must have passed it to the next one. Notice that all patches have a Signed-off-by field, or one or more Signed-off-by fields. These are people that are responsible for the changes. And, for instance, if they stole lines of code from some other project, or proprietary projects, and they did something that violated licenses, we would know exactly who to blame. So one, I recommend that you go look at this website and examine some projects that you may find interesting and get a sense of who is making changes and what the workflow looks like.